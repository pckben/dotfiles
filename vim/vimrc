" On first run:
"   :PluginInstall
"
"set nocompatible
"filetype off

"set history=1000     " number of commands to keep in history for undo
"set incsearch        " incremental searching
"set ignorecase       " ignore case when searching
"set smartcase        " ... except when search pattern contains an uppercase char
""set hlsearch       " highlight search matches
set number           " show line number
set tw=79            " width of document (used by gd)
set fo-=t            " don't automatically wrap text when typing
"set scrolloff=3
set mouse=a
set guioptions-=L
set guioptions-=l
set guioptions-=R
set guioptions-=r
set guioptions+=c    " use console dialogs
set guioptions-=m    " no GUI menu
set guioptions-=T    " no GUI toolbar

set tabstop=2        "
set shiftwidth=2
set expandtab
"set nowrap
"set linebreak
"set nolist           " list disables linebreak
"set textwidth=80
"set wrapmargin=0
"set formatoptions+=l
"set showbreak=...
"set display=lastline " show partial lines wrapped past the bottom of the screen

"syntax enable
set background=dark
colorscheme desert

set colorcolumn=80
highlight ColorColumn ctermbg=233 guibg=#111111

"==============================================================================

" the "smash" mappings for <ESC> key: just smash the k,j keys at the same time!
inoremap jk <esc>
inoremap kj <esc>

" Ctrl-j/k deletes blank line below/above, and Alt-j/k inserts.
nnoremap <silent><C-j> m`:silent +g/\m^\s*$/d<CR>``:noh<CR>
nnoremap <silent><C-k> m`:silent -g/\m^\s*$/d<CR>``:noh<CR>
nnoremap <silent><A-j> :set paste<CR>m`o<Esc>``:set nopaste<CR>
nnoremap <silent><A-k> :set paste<CR>m`O<Esc>``:set nopaste<CR>
" A-j and A-k on Windows
nnoremap <silent>ê :set paste<CR>m`o<Esc>``:set nopaste<CR>
nnoremap <silent>ë :set paste<CR>m`O<Esc>``:set nopaste<CR>
" A-j and A-k on Mac OSX
nnoremap <silent>â :set paste<CR>m`o<Esc>``:set nopaste<CR>
nnoremap <silent>Ë :set paste<CR>m`O<Esc>``:set nopaste<CR>

"==============================================================================
" Vundle

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" more Plugin commands ...

call vundle#end()            " required
filetype plugin indent on    " required

"==============================================================================
" vimawesome.com
"
Plugin 'altercation/vim-colors-solarized'
"let g:solarized_termcolors=256
"colorscheme solarized

Plugin 'tpope/vim-fugitive'   " :Gstatus

Plugin 'bling/vim-airline'
Plugin 'ctrlpvim/ctrlp.vim'

Plugin 'godlygeek/tabular'    " :Tab /=
Plugin 'tpope/vim-sensible'   " defaults everyone can agree on
" https://github.com/tpope/vim-sensible/blob/master/plugin/sensible.vim

" vim-commentary
" gcc comment a line
" gc  comment a target of a motion (eg gcap)
" gcgc uncomment a set of adjacent comment lines
" Use in commands:
"   :7,17Commentary
"   :g/search text/Commentary
" Adding new filetype support:
"   autocmd FileType {filetype} setlocal commentstring=#\ %s
Plugin 'tpope/vim-commentary'

Plugin 'tpope/vim-repeat'

" vim-surround
" cs"'    change " to '
" cs'<q>  change ' to <q></q>
" cst"    change <> to "
" ds"     remove surround
" ysiw]   add surround ] to text object iw, no space, or [ with space
" yss)    add ) to whole line
" Visual mode: V, follow by S<p class="important">
Plugin 'tpope/vim-surround'

"
" NERDTree
"
Plugin 'scrooloose/nerdtree'
map <F10> :NERDTreeToggle<CR>
" NERDTree ignore patterns
let NERDTreeIgnore=['.*\.pyc$']


" tagbar: browse the tags and have an overview of a file's structure
Plugin 'majutsushi/tagbar'
nmap <F8> :TagbarToggle<CR>


Plugin 'thaerkh/vim-workspace'
let g:workspace_autocreate = 1

"==============================================================================
" EasyMotion: jumpto anywhere with minimal keystrokes
"
Plugin 'easymotion/vim-easymotion'
" find motion \\s \\f
" word motion \\w
" Line motions: \\j \\k
" repeat last find motion \\s<CR>
let g:EasyMotion_smartcase = 1  " turn on case-insensitive
" `s{char}{label}
"nmap s <Plug>(easymotion-overwin-f)
" `s{char}{char}{label}
nmap s <Plug>(easymotion-overwin-f2)
" other mappable:
"   easymotion-next
"   easymotion-prev
"   easymotion-repeat
"   easymotion-lineforward
"   easymotion-linebackward
"   easymotion-sl line variant
"   easymotion-bd-sl   line, bidirectional variant
" enhanced search
map / <Plug>(easymotion-sn)
omap / <Plug>(easymotion-tn)
map n <Plug>(easymotion-next)
map N <Plug>(easymotion-prev)


